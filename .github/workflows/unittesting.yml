name: Unit Testing, Coverage & Image Build

on:
  push:
    branches:
      - main

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit-testing:
    name: Unit Testing
    strategy:
      matrix:
        node: [19]
        operating_system: [ubuntu-latest]
    runs-on: ${{ matrix.operating_system }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Install Dependencies
        run: npm install

      - name: Run Unit Tests
        id: nodejs-unit-testing-step
        run: npm test

      - name: Archive test result 
        if: steps.nodejs-unit-testing-step.outcome == 'failure' || steps.nodejs-unit-testing-step.outcome == 'success'
        uses: actions/upload-artifact@v2
        with:
          name: Mocha-Test-Result
          path: test-results.xml

  code-coverage:
    name: Code Coverage
    needs: unit-testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 19

      - name: Install Dependencies
        run: npm install

      - name: Run Unit Tests (again for coverage)
        run: npm test

      - name: Run Coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive coverage report
        uses: actions/upload-artifact@v2
        with:
          name: Coverage-Report
          path: coverage

  image-building:
    name: Build & Push Docker Image
    needs: code-coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/solar-system-ci:latest
            ghcr.io/${{ github.repository_owner }}/solar-system-ci:${{ github.sha }}

      - name: Verify image was pushed
        run: |
          echo "âœ… Docker image pushed: ghcr.io/${{ github.repository_owner }}/solar-system-ci:${{ github.sha }}"
