name: Unit Testing

on: push


env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit-testing:
    name: Unit Testing
    strategy:
      matrix:
        node: [19]
        operating_system: [ubuntu-latest]

    runs-on: ${{ matrix.operating_system }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Install Dependencies
        run: npm install

      - name: Unit Testing
        id: nodejs-unit-testing-step
        run: npm test

      - name: Archive test result 
        if: steps.nodejs-unit-testing-step.outcome == 'failure' || steps.nodejs-unit-testing-step.outcome == 'success'
        uses: actions/upload-artifact@v4.6.2
        with:
          name: Mocha-Test-Result
          path: test-results.xml
  code-coverage:
    needs: unit-testing
    name: code-coverage

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 19

      - name: Install Dependencies
        run: npm install

      - name: Unit Testing
        run: npm test

      - name: run coverage
        continue-on-error: true
        run: npm run coverage
    
      - name: Archive test result 
        uses: actions/upload-artifact@v4.6.2
        with:
          name: code-coverage-Result
          path: coverage
          
  image-test:
    name: Image Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t solar-system-app:latest .

      - name: Run Docker container
        run: |
          docker run -d --name test-container \
            -e MONGO_URI="${{ env.MONGO_URI }}" \
            -e MONGO_USERNAME="${{ env.MONGO_USERNAME }}" \
            -e MONGO_PASSWORD="${{ env.MONGO_PASSWORD }}" \
            -p 3000:3000 solar-system-app:latest
          sleep 5

      - name: Test /live endpoint in container
        run: |
          if curl --fail http://localhost:3000/live; then
            echo "✅ /live endpoint responded successfully"
          else
            echo "❌ /live endpoint failed" && exit 1
          fi

      - name: Stop and remove container
        run: |
          docker stop test-container
          docker rm test-container